services:
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - REDIS_URL=redis://redis:6379
      - STORAGE_TYPE=redis
    volumes:
      - ./.env:/app/.env:ro
    depends_on:
      - redis
      - healthcheck
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    command: redis-server --appendonly yes

  # Interactive chat CLI service
  chat:
    build: .
    command: python chat.py
    stdin_open: true
    tty: true
    environment:
      - REDIS_URL=redis://redis:6379
      - STORAGE_TYPE=redis
    volumes:
      - ./.env:/app/.env:ro
    depends_on:
      - redis
    profiles:
      - chat

  # Simple health check service to ensure dependencies are ready
  healthcheck:
    image: busybox:latest
    command: ["sh", "-c", "echo 'Health check service ready'"]
    restart: "no"

volumes:
  redis_data:

networks:
  default:
    name: stubborn-chatbot-network
